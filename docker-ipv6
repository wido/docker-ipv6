#!/bin/bash
#
# DHCPv6 hook for Docker
#
# This hook will configure Docker to use the first /80 IPv6 subnet
# from the Prefix we got through DHCPv6 Prefix Delegation
#
# A /80 subnet is large enough for Docker. 80 + 48 bits (MAC) equals 128-bits.
#
# dhclient will run this hook after it obtains the lease
#
# Make sure you can dhclient in a way that it requests a prefix, eg:
#
# dhclient -6 -P -d eth0
#
# With the new prefix we can reconfigure Docker and restart it
#
# Make sure /etc/default/docker contains:
#
# DOCKER_OPTS="--ipv6 --fixed-cidr-v6=`cat /etc/docker/ipv6.prefix`"
#
# This script requires sipcalc to function
if ! command -v sipcalc >/dev/null 2>&1
then
  exit 1
fi

SUBNET_SIZE=80
DOCKER_ETC_DIR="/etc/docker"
DOCKER_PREFIX_FILE="${DOCKER_ETC_DIR}/ipv6.prefix"

if [ ! -z "$new_ip6_prefix" ]
then
    # new_ip6_prefix is the whole delegated prefix
    # SUBNET_SIZE is the desired size of the subnet we want to assign.
    # Now we use sipcalc to slice new_ip6_prefix into SUBNET_SIZE big chunks.
    # SUBNET contains the address of the first chunk.
    SUBNET=$(sipcalc -S $SUBNET_SIZE $new_ip6_prefix|grep -m 1 Network|awk '{print $3}')
    # Write new prefix into docker configuration.
    echo "${SUBNET}/${SUBNET_SIZE}" > $DOCKER_PREFIX_FILE

    # Restart docker to update new configuration
    if [ "$old_ip6_prefix" != "$new_ip6_prefix" ]
    then
        if command -v systemctl &> /dev/null
        then
            systemctl restart docker.service
        else
            service docker restart
        fi
    fi
fi
